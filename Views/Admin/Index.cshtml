@model PetalOrSomething.Models.AdminDashboardViewModel
@{
    ViewData["Title"] = "Admin Dashboard";
}

<div class="container" style="margin-top: -5px;">
    <div class="card shadow-lg">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h1 class="h5 fw-bold mb-0 border-start border-3 border-danger ps-3">ADMIN DASHBOARD</h1>
        </div>

        <div class="card-body">
            <div class="row">
                <div class="col-md-3 mb-4">
                    <div class="card border-0 shadow h-100">
                        <div class="card-body text-center">

                            <h5 class="card-title text-secondary">Total Flowers</h5>
                            <p class="card-text small text-muted">The number of flower varieties in your inventory.</p>
                            <p class="card-text display-5 fw-bold text-primary">@Model.TotalFlowers</p>
                        </div>
                    </div>
                </div>

                <div class="col-md-3 mb-4">
                    <div class="card border-0 shadow h-100">
                        <div class="card-body text-center">

                            <h5 class="card-title text-secondary">Total Stock</h5>
                            <p class="card-text small text-muted">The total quantity of flowers currently available.</p>
                            <p class="card-text display-5 fw-bold text-success">@Model.TotalStock</p>
                        </div>
                    </div>
                </div>

                <div class="col-md-3 mb-4">
                    <div class="card border-0 shadow h-100">
                        <div class="card-body text-center">

                            <h5 class="card-title text-secondary">Total Expired Stocks</h5>
                            <p class="card-text small text-muted">The quantity of expired stocks needing attention.</p>
                            <p class="card-text display-5 fw-bold text-danger">@Model.TotalExpiredStock</p>
                        </div>
                    </div>
                </div>

                <div class="col-md-3 mb-4">
                    <div class="card border-0 shadow h-100">
                        <div class="card-body text-center">

                            <h5 class="card-title text-secondary">Total Revenue</h5>
                            <p class="card-text small text-muted">The total revenue generated from flower sales.</p>
                            <p class="card-text display-5 fw-bold text-warning">@Model.TotalRevenue.ToString("C")</p>
                        </div>
                    </div>
                </div>
            </div>


            <div class="row ">
                <div class="col-lg-6 mb-4">
                    <div class="card border-0 shadow-sm">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center">
                            <h1 class="h5 fw-bold mb-0 border-start border-3 border-danger ps-3">RECENT TRANSACTIONS
                            </h1>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive" style="max-height: 300px;">
                                <table class="table table-sm table-bordered text-center align-middle mb-0">
                                    <thead class="table-secondary text-nowrap" style="color:#221E2C66 !important">
                                        <tr>
                                            <th scope="col">ID</th>
                                            <th scope="col">TOTAL</th>
                                            <th scope="col">DATE</th>
                                            <th scope="col">ACTIONS</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var transaction in Model.RecentTransactions)
                                        {
                                            <tr>
                                                <td>@transaction.TransactionId</td>
                                                <td>@transaction.Total.ToString("C")</td>
                                                <td>@transaction.CreatedAt.ToString("MM/dd/yyyy")</td>
                                                <td>
                                                    <div class="d-flex flex-column">
                                                        <a href="@Url.Action("Index", "Orders", new { page = 1, search = transaction.Order.ReferenceNumber})"
                                                            class="btn btn-sm btn-outline-success">
                                                            View Order
                                                        </a>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>


                <div class="col-lg-6 mb-4">
                    <div class="card border-0 shadow-sm" style="max-height: 400px !important;">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center">
                            <h1 class="h5 fw-bold mb-0 border-start border-3 border-danger ps-3">MOST POPULAR PRODUCTS
                            </h1>
                        </div>
                        <div class="card-body" style="min-height: 300px !important; max-height: 300px !important;">
                            <canvas id="popularProductsChart"
                                style="min-height: 250px !important; max-height: 250px !important;"></canvas>
                        </div>
                    </div>
                </div>

            </div>
        </div>

        <div class="card-footer bg-light text-muted text-center">
            <small>&copy; 2024 PetalOrSomething | Admin Dashboard</small>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        @* var ctxRecentTransactions = document.getElementById('recentTransactionsChart').getContext('2d');
        var recentTransactionsChart = new Chart(ctxRecentTransactions, {
            type: 'line',
            data: {
                labels: [@string.Join(",", Model.RecentTransactions.Select(t => $"'{t.CreatedAt.ToString("MMM dd")}'"))],
                datasets: [{
                    label: 'Transaction Totals',
                    data: [@string.Join(",", Model.RecentTransactions.Select(t => t.Total))],
                    backgroundColor: 'rgba(88, 214, 141, 0.2)',
                    borderColor: '#58d68d',
                    borderWidth: 2,
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                scales: {
                    x: {
                        beginAtZero: false
                    },
                    y: {
                        beginAtZero: true
                    }
                }
            }
        }); *@

        var ctxPopularProducts = document.getElementById('popularProductsChart').getContext('2d');
        var popularProductsChart = new Chart(ctxPopularProducts, {
            type: 'pie',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.MostPopularProducts.Select(t => t.Name))),
                datasets: [{
                    label: 'Transaction Totals',
                    data: @Html.Raw(Json.Serialize(Model.MostPopularProducts.Select(t => t.TotalQuantity))),
                    backgroundColor: 'rgba(88, 214, 141, 0.2)',
                    borderColor: '#58d68d',
                    borderWidth: 2,
                    tension: 0.4,
                    fill: true
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function (tooltipItem) {
                                return tooltipItem.label + ': ' + tooltipItem.raw + ' pcs';
                            }
                        }
                    }
                }
            }
        });


    </script>
}
