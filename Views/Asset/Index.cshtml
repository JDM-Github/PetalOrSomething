@model AssetViewModel

@{
    ViewData["Title"] = "Assets List";
}

<div class="container" style="margin-top: -5px;">
    <div class="card shadow-sm">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h1 class="h5 fw-bold mb-0 border-start border-3 border-danger ps-3">ASSETS INVENTORY</h1>
            <div class="d-flex align-items-center gap-2">
                <select id="sortFilter" class="form-select form-select-sm w-auto" asp-for="SortFilter"
                    onchange="applyFilters()">
                    <option value="newest">Newest</option>
                    <option value="oldest">Oldest</option>
                    <option value="price_low_high">Price: Lowest to Highest</option>
                    <option value="price_high_low">Price: Highest to Lowest</option>
                </select>

                <select id="priceRangeFilter" class="form-select form-select-sm w-auto" asp-for="PriceRangeFilter"
                    onchange="applyFilters()">
                    <option value="all">All Prices</option>
                    <option value="50-100">₱50 - ₱100</option>
                    <option value="100-200">₱100 - ₱200</option>
                    <option value="300+">₱300+</option>
                </select>

                <select id="availableFilter" class="form-select form-select-sm w-auto" asp-for="FilterAvailable"
                    onchange="applyFilters()">
                    <option value="">All State</option>
                    <option value="active">Available</option>
                    <option value="inactive">Disabled</option>
                </select>
                <a href="@Url.Action("Add")" class="text-white btn btn-light btn-sm"
                    style="background-color: #5f4b8b !important;">
                    <i class="bi bi-plus-circle"></i> Add New Asset
                </a>
            </div>
        </div>

        <div class="card-body">
            <div class="mb-3 d-flex align-items-center">
                <input type="text" class="form-control form-control-sm" id="searchInput" placeholder="Search"
                    value="@Model.SearchFilter">
                <button type="button" class="btn btn-sm btn-secondary ms-2" onclick="applyFilters()">Search</button>
            </div>

            <div class="table-responsive">
                <table class="table table-sm table-bordered text-center align-middle mb-0">
                    <thead class="table-secondary text-nowrap" style="color:#221E2C66 !important">
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">NAME</th>
                            <th scope="col">CATEGORY</th>
                            <th scope="col">3D MODEL</th>
                            <th scope="col">PRICE</th>
                            <th scope="col">ACTIONS</th>
                        </tr>
                    </thead>
                    <tbody id="inventoryTableBody">
                        @foreach (var asset in Model.Assets)
                        {
                            <tr>
                                <td>@asset.Id</td>
                                <td>@asset.Name</td>
                                <td>@asset.Category</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(asset.Model3DLink))
                                    {
                                        <model-viewer src="@asset.Model3DLink" style="width: auto; height: 100px;"
                                            camera-controls auto-rotate ar alt="3D Model of TEST"></model-viewer>
                                    }
                                    else
                                    {
                                        <span class="text-muted">No 3D Model</span>
                                    }
                                </td>
                                <td>₱@asset.Price</td>
                                <td>
                                    <div class="d-flex flex-column justify-content-around">
                                        <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal"
                                            data-bs-target="#assetDetailsModal" data-id="@asset.Id"
                                            data-name="@asset.Name" data-model3d="@asset.Model3DLink" data-price="@asset.Price"
                                            data-category="@asset.Category">
                                            Details
                                        </button>
                                        <button class="btn btn-sm btn-outline-secondary"
                                            onclick="window.location.href='@Url.Action("Edit", new { id = asset.Id })'">
                                            Edit
                                        </button>
                                        @if (asset.IsAvailable)
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal"
                                            data-bs-target="#deleteModal" data-id="@asset.Id"
                                            data-name="@asset.Name" data-model3d="@asset.Model3DLink">
                                            Disabled
                                        </button>
                                        } else {
                                            <button type="button" class="btn btn-sm btn-outline-success" data-bs-toggle="modal"
                                            data-bs-target="#deleteModal" data-id="@asset.Id"
                                            data-name="@asset.Name" data-model3d="@asset.Model3DLink">
                                            Set Active
                                        </button>
                                        }
                                        @* <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal"
                                            data-bs-target="#deleteModal" data-id="@asset.Id"
                                            data-name="@asset.Name" data-model3d="@asset.Model3DLink">
                                            @(asset.IsAvailable ? "Disabled" : "Set Active")
                                        </button> *@
                                    </div>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card-footer d-flex justify-content-between align-items-center">
            <div class="text-left">
                <span>Showing @Model.StartIndex to @Model.EndIndex of @Model.TotalCount items</span>
            </div>

            <nav>
                <ul class="pagination justify-content-end mb-0">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link"
                            href="@Url.Action("Index", new { page = Model.CurrentPage - 1, search = Model.SearchFilter, sort = Model.SortFilter, priceRange = Model.PriceRangeFilter, isActive = Model.FilterAvailable })"
                            aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link"
                                href="@Url.Action("Index", new { page = i, search = Model.SearchFilter, sort = Model.SortFilter, priceRange = Model.PriceRangeFilter, isActive = Model.FilterAvailable })"
                                style="color: white; border-color: #5f4b8b; background-color: #5f4b8b;">
                                @i
                            </a>
                        </li>
                    }

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link"
                            href="@Url.Action("Index", new { page = Model.CurrentPage + 1, search = Model.SearchFilter, sort = Model.SortFilter, priceRange = Model.PriceRangeFilter, isActive = Model.FilterAvailable })"
                            aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>

    </div>
</div>


@await Html.PartialAsync("Modal/_ViewAsset");
@await Html.PartialAsync("Modal/_DeleteAsset");
<script type="module" src="https://ajax.googleapis.com/ajax/libs/model-viewer/4.0.0/model-viewer.min.js"></script>
<script>
    function applyFilters() {
        const sort = document.getElementById("sortFilter").value;
        const priceRange = document.getElementById("priceRangeFilter").value;
        const search = document.getElementById("searchInput").value;
        const avail = document.getElementById("availableFilter").value;

        const url = new URL(window.location.href);
        url.searchParams.set("sort", sort);
        url.searchParams.set("priceRange", priceRange);
        url.searchParams.set("search", search);
        url.searchParams.set("page", 1);
        url.searchParams.set("isActive", avail);
        window.location.href = url.toString();
    }

</script>
