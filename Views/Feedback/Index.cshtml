@model FeedbackView
<style>
    .feedback-note {
        max-height: 200px;
        overflow: auto;
        word-wrap: break-word;
    }
</style>
<div class="container" style="margin-top: -5px;">
    <div class="card shadow-sm">
        <div class="card-header bg-light d-flex justify-content-between align-items-center">
            <h1 class="h5 fw-bold mb-0 border-start border-3 border-danger ps-3">ALL FEEDBACK</h1>
            <div class="d-flex align-items-center gap-2">
                <select id="categoryFilter" class="form-select form-select-sm w-auto" onchange="applyFilters()"
                    asp-for="CategoryFilter">
                    <option value="All">All Categories</option>
                    <option value="nOrd">Normal Order</option>
                    <option value="cOrd">Custom Order</option>
                </select>
            </div>
        </div>
        <div class="card-body">
            <div class="mb-3 d-flex align-items-center">
                <input type="text" class="form-control form-control-sm" id="searchInput" placeholder="Search"
                    value="@Model.SearchFilter">
                <button type="button" class="btn btn-sm btn-secondary ms-2" onclick="applyFilters()">Search</button>
            </div>

            <div class="table-responsive">
                <table class="table table-sm table-bordered text-center align-middle mb-0">
                    <thead class="table-secondary text-nowrap" style="color:#221E2C66 !important">
                        <tr>
                            <th scope="col">ID</th>
                            <th scope="col">RATE</th>
                            <th scope="col">FEEDBACK</th>
                            @if (Context.Session.GetString("UserName") == "ADMINISTRATOR")
                                {
                            <th scope="col">ACTIONS</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var feedback in Model.Feedbacks)
                        {
                            <tr>
                                <td>@feedback.Feedback.Id</td>
                                <td>
                                    <span class="star-rating" style="color: gold; text-shadow: 0 0 5px #000000">
                                        @for (int i = 0; i < feedback.Feedback.Rate; i++)
                                        {
                                            <i class="fas fa-star"></i>
                                        }
                                    </span>
                                </td>
                                <td>
                                    <div class="feedback-note">
                                        @feedback.Feedback.FeedbackNote
                                    </div>
                                </td>
                                @if (Context.Session.GetString("UserName") == "ADMINISTRATOR")
                                {
                                <td>
                                    <div class="d-flex flex-column">
                                        @if (feedback.Feedback.IsCustomTransaction)
                                        {
                                            <a href="@Url.Action("AdminCustomOrder", "Orders", new { page = 1, search = feedback.CustomTransaction.ReferenceNumber })"
                                                class="btn btn-sm btn-outline-success">
                                                View Order
                                            </a>
                                        }
                                        else
                                        {
                                            
                                                <a href="@Url.Action("Index", "Orders", new { page = 1, search = feedback.Transaction.ReferenceNumber})"
                                                    class="btn btn-sm btn-outline-success">
                                                    View Order
                                                </a>
                                        }
                                    </div>
                                </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="card-footer d-flex justify-content-between align-items-center">
            <div class="text-left">
                <span>Showing @Model.StartIndex to @Model.EndIndex of @Model.TotalCount items</span>
            </div>

            <nav>
                <ul class="pagination justify-content-end mb-0">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link"
                            href="@Url.Action("Index", new { page = Model.CurrentPage - 1, category = Model.CategoryFilter, search = Model.SearchFilter })"
                            aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link"
                                href="@Url.Action("Index", new { page = i, category = Model.CategoryFilter, search = Model.SearchFilter })"
                                style="color: white; border-color: #5f4b8b; background-color: #5f4b8b;">
                                @i
                            </a>
                        </li>
                    }

                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link"
                            href="@Url.Action("Index", new { page = Model.CurrentPage + 1, category = Model.CategoryFilter, search = Model.SearchFilter })"
                            aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>

    </div>
</div>

<script>
    function applyFilters() {
        const category = document.getElementById("categoryFilter").value;
        const search = document.getElementById("searchInput").value;
        window.location.href = `@Url.Action("Index", "Feedback")?category=${category}&search=${search}&page=1`;
    }
</script>