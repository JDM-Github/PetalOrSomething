<div class="modal fade" id="viewStocksModal" tabindex="-1" aria-labelledby="viewStocksModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="card-header bg-light d-flex justify-content-between align-items-center">
                <h1 class="h5 fw-bold mb-0 border-start border-3 border-danger ps-3">STOCKS</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="stocksTableContainer" class="table-responsive">

                </div>
                <div class="d-flex justify-content-between mt-3">
                    <button class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Close</button>
                    <button class="btn text-white btn-sm" data-bs-dismiss="modal" onclick="showAddStockForm()"
                        style="background-color: #5f4b8b !important;">Add
                        Stock</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let selectedInventoryId = null;
    function viewStocks(inventoryId) {
        selectedInventoryId = inventoryId;
        fetchStocks(inventoryId);
    }

    function fetchStocks(inventoryId) {
        $.ajax({
            url: '@Url.Action("GetStocks", "FlowerInventory")',
            type: 'GET',
            data: { inventoryId: inventoryId },
            success: function (data) {
                displayStocks(data);
            },
            error: function (xhr, status, error) {
                console.error("Error fetching stocks:", xhr.responseText);
            }
        });
    }

    function displayStocks(stocks) {
        let tableHtml = `
            <table class="table table-sm table-bordered text-center align-middle mb-0">
                <thead class="table-secondary text-nowrap" style="color:#221E2C66 !important">
                    <tr>
                        <th scope="col">Quantity</th>
                        <th scope="col">Expiry Date</th>
                        <th scope="col">Status</th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>`;

        stocks.forEach(stock => {
            const expiryDate = new Date(stock.expiryDate);
            const today = new Date();
            const diffTime = expiryDate - today;
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

            let status;
            if (diffDays < 0) {
                status = `<span class="text-danger">Expired</span>`;
            } else if (diffDays <= 10) {
                status = `<span class="text-warning">Expiring Soon</span>`;
            } else {
                status = `<span class="text-success">Good</span>`;
            }

            tableHtml += `<tr>
                <td>${stock.quantity}</td>
                <td>${expiryDate.toLocaleDateString()}</td>
                <td>${status}</td>
                <td>
                    <button class="btn btn-sm btn-outline-danger" onclick="removeStock(${stock.id})">Remove</button>
                </td>
            </tr>`;
        });

        tableHtml += `</tbody></table>`;
        document.getElementById("stocksTableContainer").innerHTML = tableHtml;

        $('#viewStocksModal').modal('show');
    }


    function removeStock(stockId, expiryDate) {
        if (confirm("Are you sure you want to remove this expired stock?")) {
            $.ajax({
                url: '@Url.Action("RemoveStock", "FlowerInventory")',
                type: 'POST',
                data: {
                    stockId: stockId
                },
                success: function (response) {
                    alert(response.message);
                    location.reload();
                },
                error: function (xhr, status, error) {
                    alert('Failed to remove stock: ' + xhr.responseText);
                }
            });
        }
    }
</script>
