@model OrderHereViewModel
@{
    ViewData["Title"] = "Order Here";
}
<style>
    .container {
        background-color: #fafafa;
        background-size: cover;
        background-position: center;
        text-align: center;
        border-radius: 10px;
    }

    .btn-pink {
        background-color: #F6C4C3;
        color: white;
        border: none;
        font-weight: bold;
        box-shadow: 0 5px 10px #00000077;
    }

    .btn-pink:hover {
        color: white;
        background-color: #d6a4a3;
    }

    .text-pink {
        color: white;
    }

    .image-container {
        position: relative;
        width: 100%;
        height: 250px;
        overflow: hidden;
        border-top-left-radius: 100px;
        border-top-right-radius: 100px;
    }

    .image-container img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .product-card {
        border-top-left-radius: 100px;
        border-top-right-radius: 100px;
        box-shadow: 0 1px 10px #00000077 !important;
    }

    .category-container {
        max-height: 150px;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 10px;
        background-color: #fff;
        box-shadow: 0 1px 10px #00000077 !important;
    }

    .category-btn {
        background-color: #fff;
        color: #5F4B8B;
        border-radius: 30px;
        padding: 5px 8px;
        font-weight: bold;
        transition: all 0.1s ease;
    }

    .category-btn:hover,
    .category-btn:focus,
    .category-btn.active {
        background-color: #F6C4C3;
        outline: black !important;
        box-shadow: none !important;
        color: white;
    }


    .rating i {
        color: yellow;
        font-size: 18px;
        margin-right: 2px;
    }

    .pagination-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 20px;
    }

    .pagination {
        list-style: none;
        display: flex;
        gap: 10px;
        padding: 0;
        margin: 0;
    }

    .page-link {
        padding: 8px 15px;
        text-decoration: none;
        background-color: #fff;
        color: #5F4B8B;
        font-weight: bold;
        border-radius: 30px;
        transition: all 0.2s ease-in-out;
        border: 2px solid #5F4B8B;
    }

    .page-link:hover,
    .page-link:focus {
        background-color: #5F4B8B;
        color: white;
        outline: none;
        border-color: #5F4B8B;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .page-link.active {
        background-color: #F6C4C3;
        color: white;
        border-color: #F6C4C3;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    }

    .pagination li.disabled .page-link {
        color: #ccc;
        pointer-events: none;
        border-color: #ccc;
    }

    .pagination li.disabled .page-link:hover {
        background-color: #fff;
        color: #ccc;
        border-color: #ccc;
    }
</style>
<div class="container" style="margin-top: -5px;">
    <div class="row mb-4 justify-content-center align-items-center">
        <div class="col-12">
            <div class="d-flex flex-wrap justify-content-center gap-3 overflow-auto category-container">
                <a class="btn category-btn @(Model.SelectedCategory == "All" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "All" })">All Categories</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Flowers" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Flowers" })">Flowers</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Bouquets" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Bouquets" })">Bouquets</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Special Arrangements" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Special Arrangements" })">Special
                    Arrangements</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Roses" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Roses" })">Roses</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Tulips" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Tulips" })">Tulips</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Sunflowers" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Sunflowers" })">Sunflowers</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Orchids" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Orchids" })">Orchids</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Daisies" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Daisies" })">Daisies</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Carnations" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Carnations" })">Carnations</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Lilies" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Lilies" })">Lilies</a>

                <a class="btn category-btn @(Model.SelectedCategory == "Custom Bouquets" ? "active" : "")"
                    href="@Url.Action("OrderHere", "Home", new { category = "Custom Bouquets" })">Custom Bouquets</a>

            </div>
        </div>
    </div>

    <div class="row g-4" id="productList">
        @foreach (var product in Model.Products)
        {
            <div class="col-lg-3 col-md-6">
                <div class="card shadow-sm border-0 product-card">
                    <div class="image-container">
                        <model-viewer style="width: 100%; height: 100%; object-fit: contain;" src="@product.Model3DLink"
                            alt="3D Product" class="card-img-top" auto-rotate camera-controls
                            background-color="#FFFFFF"></model-viewer>
                    </div>
                    <div class="card-body text-center">
                        <h5 class="card-title fw-bold">@product.Name</h5>
                        @* <div class="rating mb-2">
                            @for (int i = 0; i < (int)product.Rating; i++)
                            {
                                <i class="fas fa-star text-warning"></i>
                            }
                            @if (product.Rating % 1 > 0)
                            {
                                <i class="fas fa-star-half text-warning"></i>
                            }
                        </div> *@
                        <p class="card-text">₱@product.Price</p>
                        <a href="/Home/ProductView/@product.Id" class="btn btn-pink w-100 rounded-pill">Order Now</a>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav aria-label="Product Pagination" class="mt-5 pb-3">
        <div class="pagination-container">
            <ul class="pagination">
                <li class="@(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("OrderHere", new { page = Model.CurrentPage - 1 })">«</a>
                </li>
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="@(Model.CurrentPage == i ? "active" : "")">
                        <a class="page-link" href="@Url.Action("OrderHere", new { page = i })">@i</a>
                    </li>
                }
                <li class="@(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("OrderHere", new { page = Model.CurrentPage + 1 })">»</a>
                </li>
            </ul>
        </div>
    </nav>
</div>


@section Scripts {
    <script type="module" src="https://ajax.googleapis.com/ajax/libs/model-viewer/4.0.0/model-viewer.min.js"></script>
    <script>
        @* function applyFilters() {
            const searchText = document.getElementById('searchBox').value.toLowerCase();
            const category = document.getElementById('categoryFilter').value;

            console.log(`Search: ${searchText}, Category: ${category}`);
        } *@
    </script>

    <script>
        @* document.addEventListener("DOMContentLoaded", function () {
            fetch('/Home/GetProducts')
                .then(response => response.json())
                .then(products => {
                    const productList = document.getElementById("productList");
                    productList.innerHTML = products.map(product => `
                            <div class="col-lg-3 col-md-6">
                                <div class="card shadow-sm border-0 product-card">
                                    <div class="image-container">
                                        <model-viewer style="width: 100%; height: 100%; object-fit: contain;"
                                            src="${product.model3DLink}" alt="3D Product" class="card-img-top" auto-rotate
                                            camera-controls background-color="#FFFFFF"></model-viewer>
                                    </div>
                                    <div class="card-body text-center">
                                        <h5 class="card-title fw-bold">${product.name}</h5>
                                        <div class="rating mb-2">
                                            ${generateStars(product.rating)}
                                        </div>
                                        <p class="card-text">₱${product.price}</p>
                                        ${getOrderButton(product.id)}
                                    </div>
                                </div>
                            </div>
                        `).join('');
                });

            function generateStars(rating) {
                const fullStars = Math.floor(rating);
                const halfStar = rating % 1 >= 0.5;
                return `
                        ${'<i class="fas fa-star text-warning"></i>'.repeat(fullStars)}
                        ${halfStar ? '<i class="fas fa-star-half-alt text-warning"></i>' : ''}
                        ${'<i class="far fa-star text-warning"></i>'.repeat(5 - Math.ceil(rating))}
                    `;
            }

            function getOrderButton(productId) {
                const isLoggedIn = '@(Context.Session.GetString("isAdmin") == "2")';
                if (isLoggedIn) {
                    const orderUrl = `/Home/ProductView/${productId}`;
                    return `<a href="${orderUrl}" class="btn btn-pink w-100 rounded-pill">Order Now</a>`;
                }
                return '';
            }
        }); *@
    </script>

}